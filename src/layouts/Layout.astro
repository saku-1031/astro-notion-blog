---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch (err) {
      console.log('Invalid DB cover image URL')
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch (err) {
    console.log('Invalid DB custom icon URL')
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <div class="container">
      <header class="site-header">
        <div class="logo-title">
          {
            database.Icon && database.Icon.Type === 'emoji' ? (
              <>
                <span>{database.Icon.Emoji}</span>
              </>
            ) : database.Icon && database.Icon.Type === 'external' ? (
              <>
                <img src={database.Icon.Url} alt="Site icon image" />
              </>
            ) : database.Icon && database.Icon.Type === 'file' ? (
              <>
                <img
                  src={customIconURL}
                  class="custom-icon"
                  alt="Site icon image"
                />
              </>
            ) : (
              None
            )
          }
          <h1 class="site-title">
            <a href={getNavLink('/')}>
              {database.Title}
            </a>
          </h1>
        </div>
        <nav class="site-nav">
          <a href="#" class="nav-link">home</a>
          <a href="https://twitter.com/SakuSaku23TOP8" class="nav-link icon-link">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>
          </a>
        </nav>
      </header>

      <div class="content-wrapper">
        <main>
          <div class="content">
              {
                coverImageURL && (
                  <div class="cover">
                    <img src={coverImageURL} alt="Site cover image" loading="lazy" />
                  </div>
                )
              }

            <div class="category-buttons">
              <button class="category-button active">最新の事</button>
              <button class="category-button">未定(記事が増えてきたら動くようにするね)</button>
              <button class="category-button">未定(記事が増えてきたら動くようにするね)</button>
              <button class="category-button">未定(記事が増えてきたら動くようにするね)</button>
            </div>

            <slot name="main" />

            <footer>
              <div>
                <span>Powered by&nbsp;</span>
                <a href="https://github.com/otoyo/astro-notion-blog"
                  >astro-notion-blog</a
                >
              </div>
            </footer>
          </div>
        </main>

        <aside>
          <slot name="aside" />
        </aside>
      </div>
    </div>

    <SearchModal />
    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>

<style>
  :root {
    --primary-color: #4682B4;
    --accent-color: #FFA500;
    --text-color: #333;
    --bg-color: #fff;
    --accent-bg: #e6f3f0;
    --link-color: #666;
    --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
  }

  body {
    font-family: var(--font-sans);
    background-color: var(--bg-color);
    color: var(--text-color);
    margin: 0;
    padding: 0;
    font-size: 16px;
    line-height: 1.5;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .site-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 0;
  }

  .logo-title {
    display: flex;
    align-items: center;
  }

  .logo-title img,
  .logo-title span {
    width: 40px;
    height: 40px;
    margin-right: 10px;
    font-size: 40px;
  }

  .site-title {
    font-size: 1rem;
    color: var(--primary-color);
    margin: 0;
    white-space: nowrap;
  }

  .site-title a {
    color: inherit;
    text-decoration: none;
  }

  .site-nav {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .nav-link {
    color: var(--text-color);
    text-decoration: none;
    font-size: 0.85rem;
  }

  .nav-link:hover {
    color: var(--accent-color);
  }

  .icon-link svg {
    width: 20px;
    height: 20px;
  }

  .content-wrapper {
    display: flex;
    margin-top: 20px;
    padding: 20px 0;
    gap: 40px;
  }

  main {
    flex: 1;
    order: 2;
    min-width: 0;
  }

  aside {
    width: 250px;
    padding: 20px;
    background-color: #f4f4f4;
    order: 1;
    border-radius: 8px;
  }

  .cover img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-radius: 8px;
  }

  .category-buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    margin: 20px 0;
  }

  .category-button {
    background-color: #f0f0f0;
    border: none;
    padding: 10px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9rem;
  }

  .category-button.active {
    background-color: var(--primary-color);
    color: white;
  }

  footer {
    margin-top: 30px;
    text-align: center;
    font-size: 0.75rem;
    color: #777;
  }

  footer a {
    color: inherit;
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .site-header {
      flex-wrap: wrap;
    }

    .logo-title {
      margin-bottom: 10px;
    }

    .site-nav {
      width: 100%;
      justify-content: flex-end;
    }

    .content-wrapper {
      flex-direction: column;
      gap: 20px;
    }

    main {
      order: 1;
    }

    aside {
      width: 100%;
      order: 2;
    }

    .category-buttons {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>

<style is:global>
  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fff;
    --fg: #333;
    --accents-1: #666;
    --accents-2: #666;
    --accents-3: #666;
    --geist-foreground: #000;
    --geist-success: #690;

    --radius: 4px;

    --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, 'Segoe UI',
      Helvetica, 'Hiragino Sans', 'Hiragino Kaku Gothic ProN',
      'Hiragino Sans GB', メイリオ, Meiryo, 'Apple Color Emoji', Arial,
      sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol';

    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: rgba(135, 131, 120, 0.15);
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: top;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    text-align: left;
    line-height: 1.2rem;
  }
  table td::after {
    content: '';
    display: inline-block;
    min-height: 0.9rem;
  }
</style>
